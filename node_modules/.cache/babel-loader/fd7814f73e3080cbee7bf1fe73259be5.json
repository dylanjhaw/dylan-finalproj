{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dylan\\\\web102_unit7lab\\\\client\\\\src\\\\pages\\\\PostView.js\",\n    _s = $RefreshSig$();\n\n// PostView.js\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostView = () => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [post, setPost] = useState(null); // useEffect(() => {\n  //     // Fetch the post from your API using the id from the URL\n  //     fetch(`/api/posts/${id}`)\n  //         .then(response => response.json())\n  //         .then(data => setPost(data))\n  //         .catch(error => console.error(error));\n  // }, [id]);\n\n  useEffect(() => {\n    // Fetch the post from your API using the id from the URL\n    fetch(`/api/posts/${id}`).then(response => {\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      return response.json();\n    }).then(data => setPost(data)).catch(error => console.error('Error:', error));\n  }, [id]);\n\n  if (!post) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: post.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"by \", post.author]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: post.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Posted: \", post.created_at]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PostView, \"6+b5eOm0C2EIwwbuXxVLhmPamew=\", false, function () {\n  return [useParams];\n});\n\n_c = PostView;\nexport default PostView;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostView\");","map":{"version":3,"names":["React","useEffect","useState","useParams","PostView","id","post","setPost","fetch","then","response","ok","Error","status","json","data","catch","error","console","title","author","description","created_at"],"sources":["C:/Users/dylan/web102_unit7lab/client/src/pages/PostView.js"],"sourcesContent":["// PostView.js\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst PostView = () => {\r\n    const { id } = useParams();\r\n    const [post, setPost] = useState(null);\r\n\r\n    // useEffect(() => {\r\n    //     // Fetch the post from your API using the id from the URL\r\n    //     fetch(`/api/posts/${id}`)\r\n    //         .then(response => response.json())\r\n    //         .then(data => setPost(data))\r\n    //         .catch(error => console.error(error));\r\n    // }, [id]);\r\n\r\n    useEffect(() => {\r\n        // Fetch the post from your API using the id from the URL\r\n        fetch(`/api/posts/${id}`)\r\n            .then(response => {\r\n                if (!response.ok) {\r\n                    throw new Error(`HTTP error! status: ${response.status}`);\r\n                }\r\n                return response.json();\r\n            })\r\n            .then(data => setPost(data))\r\n            .catch(error => console.error('Error:', error));\r\n    }, [id]);\r\n\r\n    if (!post) {\r\n        return <div>Loading...</div>;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>{post.title}</h2>\r\n            <h3>by {post.author}</h3>\r\n            <p>{post.description}</p>\r\n            <p>Posted: {post.created_at}</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PostView;"],"mappings":";;;AAAA;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,kBAA1B;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;EAAA;;EACnB,MAAM;IAAEC;EAAF,IAASF,SAAS,EAAxB;EACA,MAAM,CAACG,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,IAAD,CAAhC,CAFmB,CAInB;EACA;EACA;EACA;EACA;EACA;EACA;;EAEAD,SAAS,CAAC,MAAM;IACZ;IACAO,KAAK,CAAE,cAAaH,EAAG,EAAlB,CAAL,CACKI,IADL,CACUC,QAAQ,IAAI;MACd,IAAI,CAACA,QAAQ,CAACC,EAAd,EAAkB;QACd,MAAM,IAAIC,KAAJ,CAAW,uBAAsBF,QAAQ,CAACG,MAAO,EAAjD,CAAN;MACH;;MACD,OAAOH,QAAQ,CAACI,IAAT,EAAP;IACH,CANL,EAOKL,IAPL,CAOUM,IAAI,IAAIR,OAAO,CAACQ,IAAD,CAPzB,EAQKC,KARL,CAQWC,KAAK,IAAIC,OAAO,CAACD,KAAR,CAAc,QAAd,EAAwBA,KAAxB,CARpB;EASH,CAXQ,EAWN,CAACZ,EAAD,CAXM,CAAT;;EAaA,IAAI,CAACC,IAAL,EAAW;IACP,oBAAO;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAP;EACH;;EAED,oBACI;IAAA,wBACI;MAAA,UAAKA,IAAI,CAACa;IAAV;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MAAA,kBAAQb,IAAI,CAACc,MAAb;IAAA;MAAA;MAAA;MAAA;IAAA,QAFJ,eAGI;MAAA,UAAId,IAAI,CAACe;IAAT;MAAA;MAAA;MAAA;IAAA,QAHJ,eAII;MAAA,uBAAYf,IAAI,CAACgB,UAAjB;IAAA;MAAA;MAAA;MAAA;IAAA,QAJJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAQH,CArCD;;GAAMlB,Q;UACaD,S;;;KADbC,Q;AAuCN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}