{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dylan\\\\web102_unit7lab\\\\client\\\\src\\\\pages\\\\PostView.js\",\n    _s = $RefreshSig$();\n\n// PostView.js\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { supabase } from '../client.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst PostView = () => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [post, setPost] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    fetchPost();\n  }, [id]);\n\n  const fetchPost = async () => {\n    const {\n      data,\n      error\n    } = await supabase.from('posts') // replace 'posts' with the name of your table\n    .select('title, author, description, created_at') // replace these with the columns of your table\n    .eq('id', id);\n\n    if (error) {\n      console.error('Error fetching post: ', error);\n    } else {\n      setPost(data[0]);\n      setLoading(false);\n    }\n  }; // if (loading) {\n  //     return <div>Loading...</div>;\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: post && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"by \" + post.author\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: post.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Posted: \" + post.created_at\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PostView, \"taoQDP9sD2hseJdPcOb/ybygNeI=\", false, function () {\n  return [useParams];\n});\n\n_c = PostView;\nexport default PostView;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostView\");","map":{"version":3,"names":["React","useEffect","useState","useParams","supabase","PostView","id","post","setPost","loading","setLoading","fetchPost","data","error","from","select","eq","console","title","author","description","created_at"],"sources":["C:/Users/dylan/web102_unit7lab/client/src/pages/PostView.js"],"sourcesContent":["// PostView.js\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { supabase } from '../client.js';\r\n\r\nconst PostView = () => {\r\n    const { id } = useParams();\r\n    const [post, setPost] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        fetchPost();\r\n    }, [id]);\r\n\r\n    const fetchPost = async () => {\r\n        const { data, error } = await supabase\r\n            .from('posts') // replace 'posts' with the name of your table\r\n            .select('title, author, description, created_at') // replace these with the columns of your table\r\n            .eq('id', id);\r\n        if (error) {\r\n            console.error('Error fetching post: ', error);\r\n        } else {\r\n            setPost(data[0]);\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    // if (loading) {\r\n    //     return <div>Loading...</div>;\r\n    // }\r\n\r\n    return (\r\n        <div>\r\n            {post && (\r\n                <>\r\n                    <h2>{post.title}</h2>\r\n                    <h3>{\"by \" + post.author}</h3>\r\n                    <p>{post.description}</p>\r\n                    <p>{\"Posted: \" + post.created_at}</p>\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PostView;"],"mappings":";;;AAAA;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,QAAT,QAAyB,cAAzB;;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;EAAA;;EACnB,MAAM;IAAEC;EAAF,IAASH,SAAS,EAAxB;EACA,MAAM,CAACI,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,IAAD,CAAhC;EACA,MAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,IAAD,CAAtC;EAEAD,SAAS,CAAC,MAAM;IACZU,SAAS;EACZ,CAFQ,EAEN,CAACL,EAAD,CAFM,CAAT;;EAIA,MAAMK,SAAS,GAAG,YAAY;IAC1B,MAAM;MAAEC,IAAF;MAAQC;IAAR,IAAkB,MAAMT,QAAQ,CACjCU,IADyB,CACpB,OADoB,EACX;IADW,CAEzBC,MAFyB,CAElB,wCAFkB,EAEwB;IAFxB,CAGzBC,EAHyB,CAGtB,IAHsB,EAGhBV,EAHgB,CAA9B;;IAIA,IAAIO,KAAJ,EAAW;MACPI,OAAO,CAACJ,KAAR,CAAc,uBAAd,EAAuCA,KAAvC;IACH,CAFD,MAEO;MACHL,OAAO,CAACI,IAAI,CAAC,CAAD,CAAL,CAAP;MACAF,UAAU,CAAC,KAAD,CAAV;IACH;EACJ,CAXD,CATmB,CAsBnB;EACA;EACA;;;EAEA,oBACI;IAAA,UACKH,IAAI,iBACD;MAAA,wBACI;QAAA,UAAKA,IAAI,CAACW;MAAV;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QAAA,UAAK,QAAQX,IAAI,CAACY;MAAlB;QAAA;QAAA;QAAA;MAAA,QAFJ,eAGI;QAAA,UAAIZ,IAAI,CAACa;MAAT;QAAA;QAAA;QAAA;MAAA,QAHJ,eAII;QAAA,UAAI,aAAab,IAAI,CAACc;MAAtB;QAAA;QAAA;QAAA;MAAA,QAJJ;IAAA;EAFR;IAAA;IAAA;IAAA;EAAA,QADJ;AAYH,CAtCD;;GAAMhB,Q;UACaF,S;;;KADbE,Q;AAwCN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}