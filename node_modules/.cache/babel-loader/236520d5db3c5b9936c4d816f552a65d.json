{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dylan\\\\web102_unit7lab\\\\client\\\\src\\\\pages\\\\ReadPosts.js\",\n    _s = $RefreshSig$();\n\n// import React, { useState, useEffect } from 'react';\n// import Card from '../components/Card';\n// import { supabase } from '../client'\n// const ReadPosts = (props) => {\n//     const [posts, setPosts] = useState([]);\n//     useEffect(() => {\n//         const fetchPost = async () => {\n//             const { data } = await supabase\n//                 .from('Posts')\n//                 .select('id, title, author, description, created_at, upvote') // specify the columns to select here\n//                 .order('created_at', { ascending: true });\n//             setPosts(data);\n//         }\n//         fetchPost();\n//     }, []);\n//     return (\n//         <div className=\"ReadPosts\">\n//             {\n//                 posts && posts.length > 0 ?\n//                 posts.map((post,index) => \n//                    <Card id={post.id} title={post.title} author={post.author} description={post.description} created_at={post.created_at}/>\n//                 ) : <h2>{'No Posts'}</h2>\n//             }\n//         </div>  \n//     )\n// }\n// export default ReadPosts;\nimport React, { useState, useEffect } from 'react';\nimport Card from '../components/Card';\nimport { supabase } from '../client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ReadPosts = props => {\n  _s();\n\n  const [posts, setPosts] = useState([]);\n  const [sortOption, setSortOption] = useState('created_at'); // add this line\n\n  useEffect(() => {\n    const fetchPost = async () => {\n      const {\n        data\n      } = await supabase.from('Posts').select('id, title, author, description, created_at, upvote').order(sortOption, {\n        ascending: sortOption === 'created_at'\n      }); // update this line\n\n      setPosts(data);\n    };\n\n    fetchPost();\n  }, [sortOption]); // update this line\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      value: sortOption,\n      onChange: e => setSortOption(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"created_at\",\n        children: \"Sort by created time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"upvote\",\n        children: \"Sort by upvote count\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), posts.map((post, index) => /*#__PURE__*/_jsxDEV(Card, { ...post\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ReadPosts, \"CxymxDrWeTw4QvNqUGzmhzKU4mk=\");\n\n_c = ReadPosts;\nexport default ReadPosts;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReadPosts\");","map":{"version":3,"names":["React","useState","useEffect","Card","supabase","ReadPosts","props","posts","setPosts","sortOption","setSortOption","fetchPost","data","from","select","order","ascending","e","target","value","map","post","index"],"sources":["C:/Users/dylan/web102_unit7lab/client/src/pages/ReadPosts.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import Card from '../components/Card';\r\n// import { supabase } from '../client'\r\n\r\n// const ReadPosts = (props) => {\r\n\r\n//     const [posts, setPosts] = useState([]);\r\n\r\n//     useEffect(() => {\r\n        \r\n\r\n//         const fetchPost = async () => {\r\n//             const { data } = await supabase\r\n//                 .from('Posts')\r\n//                 .select('id, title, author, description, created_at, upvote') // specify the columns to select here\r\n//                 .order('created_at', { ascending: true });\r\n        \r\n//             setPosts(data);\r\n//         }\r\n\r\n//         fetchPost();\r\n//     }, []);\r\n    \r\n//     return (\r\n//         <div className=\"ReadPosts\">\r\n//             {\r\n//                 posts && posts.length > 0 ?\r\n//                 posts.map((post,index) => \r\n//                    <Card id={post.id} title={post.title} author={post.author} description={post.description} created_at={post.created_at}/>\r\n//                 ) : <h2>{'No Posts'}</h2>\r\n//             }\r\n//         </div>  \r\n//     )\r\n// }\r\n\r\n// export default ReadPosts;\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport Card from '../components/Card';\r\nimport { supabase } from '../client'\r\n\r\nconst ReadPosts = (props) => {\r\n    const [posts, setPosts] = useState([]);\r\n    const [sortOption, setSortOption] = useState('created_at'); // add this line\r\n\r\n    useEffect(() => {\r\n        const fetchPost = async () => {\r\n            const { data } = await supabase\r\n                .from('Posts')\r\n                .select('id, title, author, description, created_at, upvote')\r\n                .order(sortOption, { ascending: sortOption === 'created_at' }); // update this line\r\n        \r\n            setPosts(data);\r\n        }\r\n\r\n        fetchPost();\r\n    }, [sortOption]); // update this line\r\n\r\n    return (\r\n        <div>\r\n            <select value={sortOption} onChange={e => setSortOption(e.target.value)}>\r\n                <option value=\"created_at\">Sort by created time</option>\r\n                <option value=\"upvote\">Sort by upvote count</option>\r\n            </select>\r\n\r\n            {posts.map((post, index) => (\r\n                <Card key={index} {...post} />\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ReadPosts;"],"mappings":";;;AAAA;AACA;AACA;AAEA;AAEA;AAEA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,SAASC,QAAT,QAAyB,WAAzB;;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;EAAA;;EACzB,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACQ,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,YAAD,CAA5C,CAFyB,CAEmC;;EAE5DC,SAAS,CAAC,MAAM;IACZ,MAAMS,SAAS,GAAG,YAAY;MAC1B,MAAM;QAAEC;MAAF,IAAW,MAAMR,QAAQ,CAC1BS,IADkB,CACb,OADa,EAElBC,MAFkB,CAEX,oDAFW,EAGlBC,KAHkB,CAGZN,UAHY,EAGA;QAAEO,SAAS,EAAEP,UAAU,KAAK;MAA5B,CAHA,CAAvB,CAD0B,CAI0C;;MAEpED,QAAQ,CAACI,IAAD,CAAR;IACH,CAPD;;IASAD,SAAS;EACZ,CAXQ,EAWN,CAACF,UAAD,CAXM,CAAT,CAJyB,CAeP;;EAElB,oBACI;IAAA,wBACI;MAAQ,KAAK,EAAEA,UAAf;MAA2B,QAAQ,EAAEQ,CAAC,IAAIP,aAAa,CAACO,CAAC,CAACC,MAAF,CAASC,KAAV,CAAvD;MAAA,wBACI;QAAQ,KAAK,EAAC,YAAd;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QAAQ,KAAK,EAAC,QAAd;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,EAMKZ,KAAK,CAACa,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,kBACP,QAAC,IAAD,OAAsBD;IAAtB,GAAWC,KAAX;MAAA;MAAA;MAAA;IAAA,QADH,CANL;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAYH,CA7BD;;GAAMjB,S;;KAAAA,S;AA+BN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}